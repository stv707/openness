# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

# create folder for docker builds in /home for larger disk storage
# (the folder is under the /dev/mapper/cl-root is limited to 50GB by default)
- name: create /docker directory at /home
  file:
    path: "/home/docker"
    state: directory

- name: edit docker configuration to use new directory
  replace:
    path: /usr/lib/systemd/system/docker.service
    regexp: 'dockerd -H'
    replace: 'dockerd --graph /home/docker -H'

- name: restart docker service
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes

- name: create VCA directory
  file:
    path: "{{ _vca_dest }}"
    state: directory

- name: download VCA image
  unarchive:
    src: "{{ _vca_image_url }}"
    dest: "{{ _vca_dest }}"
    remote_src: yes
    creates: "{{ _vca_dest }}/README"
    extra_opts: [--strip-components=1]
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"

- name: create VCA cache directory
  file:
    dest: "{{ _vca_dest }}/VCAC-A/cache"
    state: directory

- name: download VCA pre-requisites
  get_url:
    url: "{{ item }}"
    dest: "{{ _vca_dest }}/VCAC-A/cache"
  with_items: "{{ _vca_download_files }}"
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"

- name: build Host Kernel and VCA Driver
  command: "{{ _vca_dest }}/VCAC-A/Intel_Media_Analytics_Host/scripts/build.sh -c -o centos7"
  args:
    creates: "{{ _vca_dest }}/VCAC-A/Intel_Media_Analytics_Host/build/host_packages/"
  ignore_errors: yes
  register: ret
  failed_when: >
    ('ERROR' in ret.stderr) or
    ('Error' in ret.stderr) or
    ('error' in ret.stderr)

- name: install daemon-vca dependencies
  yum:
    state: present
    name:
      - gdisk
      - mtools

- name: get current kernel
  command: uname -r
  register: installed_kernel
  changed_when: false

- name: remove old VCA RPMs
  shell: "set -o pipefail && rpm -qa | grep -e {{ item }} | xargs yum -y erase"
  ignore_errors: yes
  with_items: "{{ _vca_rpm_files }}"
  when: "'VCA' not in installed_kernel.stdout"

- name: install VCA kernel packages, driver and utility
  command: "rpm -ivh {{ _vca_dest }}/VCAC-A/Intel_Media_Analytics_Host/build/host_packages/{{ item }}.rpm" # noqa 303
  with_items: "{{ _vca_rpm_files }}"
  when: "'VCA' not in installed_kernel.stdout"

- name: configure VCA kernel to be the default at boot
  shell: grubby --set-default /boot/vmlinuz-3.10.0-*.VCA+
  changed_when: true
  when: "'VCA' not in installed_kernel.stdout"

- name: request reboot if VCA kernel is newly installed
  set_fact:
    perform_reboot: "{{ perform_reboot|default([]) + [ 'vca' ] }}"
  when: "'VCA' not in installed_kernel.stdout"
